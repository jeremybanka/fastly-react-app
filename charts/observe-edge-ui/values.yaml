---
replicaCount: 1

image:
  repository: container-registry.secretcdn.net/playground/data-engineering/observe-edge-ui
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.1.0-rc3"

imagePullSecrets:
- name: harbor-playground
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname
  # template.
  #
  # Note: Going forward, we should just use the default --- i.e., fullname ---
  # and not override.
  name: "observe-edge-ui"

podAnnotations: { }
podSecurityContext: { }
securityContext: { }

service:
  type: ClusterIP
  port: 80
  internalPort: 5000

ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/auth-signin: "https://vouch.int.usc1.dev.k8s.secretcdn.net/login?url=$scheme://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err"
    nginx.ingress.kubernetes.io/auth-url: https://vouch.int.usc1.dev.k8s.secretcdn.net/validate
    nginx.ingress.kubernetes.io/auth-response-headers: X-Vouch-User
    nginx.ingress.kubernetes.io/auth-snippet: |
      # these return values are used by the @error401 call
      auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
      auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
      auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
  hosts:
    - host: observe-edge-ui.int.usc1.dev.k8s.secretcdn.net
      paths:
        - backend:
          serviceName: observe-edge-ui
          path: /
  tls:
  - hosts:
    - observe-edge-ui.int.usc1.dev.k8s.secretcdn.net
    secretName: observe-edge-ui-cert

resources: { }

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }
tolerations: [ ]
affinity: { }
